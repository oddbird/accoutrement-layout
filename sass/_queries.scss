// Media Queries
// =============



// Accoutrement Query Context
// --------------------------
$accoutrement-query-context: ();



// Get Breakpoint [function]
// -------------------------
@function _get-breakpoint(
  $break
) {
  @if variable-exists('breakpoints') and map-get($breakpoints, $break) {
    $break: map-get($breakpoints, $break) or $break;

    @if map-has-key($breakpoints, $break) {
      $break: _get-breakpoint($break);
    }
  }

  @if function-exists('size') and map-get($sizes, $break) {
    $break: size($break);
  }

  @if type-of($break) != 'number' {
    @error '"#{$break}" isn\'t a valid breakpoint length or user-defined keyword.';
  }

  @if function-exists('browser-ems') {
    @return browser-ems($break);
  }

  @return $break;
}



// Apply Query [mixin]
// -------------------
@mixin _apply-query(
  $name,
  $query
) {
  $context: ($name: $query);
  $context: map-merge($accoutrement-query-context, $context);
  $accoutrement-query-context: $context !global;

  @media #{$query} {
    @content;
  }

  $accoutrement-query-context: map-remove($accoutrement-query-context, $name) !global;
}



// Below [mixin]
// -------------
@mixin below(
  $max,
  $prop: 'width'
) {
  $name: 'below `#{$max}`';
  $max: _get-breakpoint($max);

  @if unit($max) == 'em' {
    $max: $max - 0.01;
  } @else if comparable($max, 1px) {
    $max: $max - 1px;
  }

  $query: '(max-#{$prop}: #{$max})';

  @include _apply-query($name, $query) {
    @content;
  }
}



// Above [mixin]
// -------------
@mixin above(
  $min,
  $prop: 'width'
) {
  $name: 'above `#{$min}`';
  $min: _get-breakpoint($min);
  $query: '(min-#{$prop}: #{$min})';

  @include _apply-query($name, $query) {
    @content;
  }
}



// Between [mixin]
// ---------------
@mixin between(
  $min,
  $max,
  $prop: 'width'
) {
  $name: 'between `#{$min}` and `#{$max}`';
  $min: _get-breakpoint($min);
  $max: _get-breakpoint($max);

  @if unit($max) == 'em' {
    $max: $max - 0.01;
  } @else if comparable($max, 1px) {
    $max: $max - 1px;
  }

  $query: '(min-#{$prop}: #{$min}) and (max-#{$prop}: #{$max})';

  @include _apply-query($name, $query) {
    @content;
  }
}
