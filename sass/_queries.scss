// Media Queries
// =============


// Breakpoints
// -----------
/// Establish a map of named breakpoints.
///
/// If you have [Accoutrement-Scale](http://oddbird.net/accoutrement-scale/)
/// installed, you can use the scale syntax
/// for describing size-relationships and adjustments –
/// and even reference `$sizes` as though they are `$breakpoints`.
///
/// @group config
///
/// @example scss - defining breakpoints
///   $breakpoints: (
///     'small': 30em,
///     'medium': 45em,
///   );
/// @example scss - using accoutrement-scale
///   $breakpoints: (
///     'small': 30em ('convert-units': 'browser-ems'),
///     'medium': 'small' ('times': 1.5),
///   );
$breakpoints: () !default;



// Below [mixin]
// -------------
/// Generate a max–<`width`/`height`> query,
/// for styling elements below the given viewport width.
/// @group queries
/// @param {length | string} $max -
///   The name of a documented breakpoint/size,
///   or an arbitarty length to use in the query.
/// @param {'width' | 'height'} $prop ['width'] -
///   The property (width or height) to test against,
///   for a result of e.g. `(max-width: 30em)`.
@mixin below(
  $max,
  $prop: 'width'
) {
  $name: 'below `#{$max}`';
  $max: _get-breakpoint($max);

  @if unit($max) == 'em' {
    $max: $max - 0.01;
  } @else if comparable($max, 1px) {
    $max: $max - 1px;
  }

  $query: '(max-#{$prop}: #{$max})';

  @include _apply-query($name, $query) {
    @content;
  }
}



// Above [mixin]
// -------------
/// Generate a min-<`width`/`height`> query,
/// for styling elements above the given viewport width.
/// @group queries
/// @param {length | string} $min -
///   The name of a documented breakpoint/size,
///   or an arbitarty length to use in the query.
/// @param {'width' | 'height'} $prop ['width'] -
///   The property (width or height) to test against,
///   for a result of e.g. `(min-width: 30em)`.
@mixin above(
  $min,
  $prop: 'width'
) {
  $name: 'above `#{$min}`';
  $min: _get-breakpoint($min);
  $query: '(min-#{$prop}: #{$min})';

  @include _apply-query($name, $query) {
    @content;
  }
}



// Between [mixin]
// ---------------
/// Generate a min-and-max-<`width`/`height`> query,
/// for styling elements between given viewport widths.
/// @group queries
/// @param {length | string} $min -
///   The name of a documented breakpoint/size,
///   or an arbitarty length to use as a minimum in the query.
/// @param {length | string} $max -
///   The name of a documented breakpoint/size,
///   or an arbitarty length to use as a maximum in the query.
/// @param {'width' | 'height'} $prop ['width'] -
///   The property (width or height) to test against,
///   for a result of e.g. `(min-width: 30em)`.
@mixin between(
  $min,
  $max,
  $prop: 'width'
) {
  $name: 'between `#{$min}` and `#{$max}`';
  $min: _get-breakpoint($min);
  $max: _get-breakpoint($max);

  @if unit($max) == 'em' {
    $max: $max - 0.01;
  } @else if comparable($max, 1px) {
    $max: $max - 1px;
  }

  $query: '(min-#{$prop}: #{$min}) and (max-#{$prop}: #{$max})';

  @include _apply-query($name, $query) {
    @content;
  }
}
