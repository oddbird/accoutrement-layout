// Utilities
// =========

// Add map values together
@function _true-map-increment(
  $base,
  $add
) {
  @each $key in map-keys($add) {
    $value: map-get($add, $key);

    @if $value {
      $base-value: map-get($base, $key);
      $new-value: if($base-value, $base-value + $value, $value);
      $base: map-merge($base, ($key: $new-value));
    }
  }

  @return $base;
}

// Split a string
@function _true-str-split(
  $string,
  $substring
) {
  $strings: ();
  $found-at: str-index($string, $substring);
  @while $found-at {
    $strings: append($strings, if($found-at > 1, str-slice($string, 1, $found-at - 1), ""));
    $string: str-slice($string, $found-at + str-length($substring));
    $found-at: str-index($string, $substring);
  }
  $strings: append($strings, $string);
  @return $strings;
}


// Check for strict equality
@function _true-is-equal($one, $two) {
  @if type-of($one) == number and type-of($two) == number {
    @if unit($one) == unit($two) {
      @return $one == $two;
    } @else {
      @return false;
    }
  } @else {
    @return $one == $two;
  }
}


// Inspect
@function _true-inspect(
  $value
) {
  @if function-exists(inspect) {
    @if type-of($value) == map {
      @return '#{inspect($value)}';
    } @else {
      @return inspect($value);
    }
  } @else if $value == null {
    @return 'null';
  } @else if type-of($value) == map {
    $map: '(';
    $keys: map-keys($value);
    @each $key in $keys {
      $val: map-get($value, $key);
      $last: if(index($keys, $key) == length($keys), true, false);
      $map: '#{$map}#{$key}: #{$val}#{if($last, ")", ", ")}';
    }
    @return $map;
  } @else {
    @return $value;
  }
}
